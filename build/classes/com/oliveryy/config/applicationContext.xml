<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xsi:schemaLocation="
		 http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		 http://www.springframework.org/schema/context 
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" 
		 default-autowire="byName">
	

	<!-- 配置Proxool连接池,数据源，生产环境中注意修改相应参数 maximumConnectionCount,minimumConnectionCount值-->
	 <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">    
        <property name="driver" value="com.mysql.jdbc.Driver"/>       
        <property name="driverUrl" value="jdbc:mysql://127.0.0.1:3306/MessageManagementSystem"/>        
        <property name="user" value="oliver"/>     
        <property name="password" value="oliver"/> 
        <property name="alias" value="ios_Proxool"/>   
        <!-- 最小保持的空闲连接数，连接池中可用的连接数量.如果当前的连接池中的连接少于这个数值.新的连接将被建立 默认为2 -->            
        <property name="prototypeCount" value="5"/>     
        <!-- 最大连接数 -->
        <property name="maximumConnectionCount" value="300"/>    
		<!-- 最小连接数 --> 
        <property name="minimumConnectionCount" value="10"/>  
        <!-- 用于保持连接的测试语句 如果发现了空闲的数据库连接.house keeper 将会用这个语句来测试 -->  
        <property name="houseKeepingTestSql" value="select sysdate from dual"/>  
        <!--  如果housekeeper 检测到某个线程的活动时间大于这个数值.它将会杀掉这个线程.所以确认一下你的服务器的带宽.然后定一个合适的值.默认是5分钟 -->     
        <property name="maximumActiveTime" value="9000000000"/> 
        <!-- 会有多于10个要求同时建立连接的请求，当请求数量超过限定的数值时，会出现连接失败的情况 
        	当数据库并发连接可能会比较高的应用，这个值应该适当的设大一点
        -->
        <property name="simultaneousBuildThrottle" value="300"/>
    </bean>   
	 
    <!-- 配置dao -->
    <bean id="dao" class="com.oliveryy.dao.DbHelperImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

     <!-- 支持注解,搜索的目录！important!!!-->
	 <context:component-scan base-package="com.oliveryy"/>
	 <context:annotation-config/>
	
	
</beans>